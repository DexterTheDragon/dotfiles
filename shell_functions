# vim:ft=zsh
# list contents right after changing directories
cd() {
    # check if were in a bundle and exit if we are going above the project root
    if [ "$BUNDLE_GEMFILE" ]; then
        if [ "$1" ]
            then PATHTO=$1
            else PATHTO=~
        fi
        if [ $(expr match "$PATHTO" "/") != 1 ]; then
            PATHTO="$(pwd)/$PATHTO"
        fi
        PROJECTPATH=$(dirname $BUNDLE_GEMFILE)
        if [ $(expr match "$PATHTO" "$PROJECTPATH") != ${#PROJECTPATH} ]; then
            echo "WARNING: STILL IN BUNDLE"
            exit
        fi
    fi

    if [ "$1" ]
    then builtin cd "$1" && ls
    else builtin cd && ls
    fi
    declare -f  __rvm_project_rvmrc > /dev/null
    if [ $? -eq 0 ]; then
         __rvm_project_rvmrc
    fi
}

# ..(), ...() for quickly changing $CWD {{{1
# http://www.shell-fu.org/lister.php?id=769

# Go up n levels:
# .. 3
function .. (){
    local arg=${1:-1};
    local dir=""
    while [ $arg -gt 0 ]; do
        dir="../$dir"
        arg=$(($arg - 1));
    done
    cd $dir >&/dev/null
}

# Go up to a named dir
# ... usr
function ... (){
    if [ -z "$1" ]; then
        return
    fi
    local maxlvl=16
    local dir=$1
    while [ $maxlvl -gt 0 ]; do
        dir="../$dir"
        maxlvl=$(($maxlvl - 1));
        if [ -d "$dir" ]; then
            cd $dir >&/dev/null
        fi
    done
}
# }}}

spell (){
    echo $1 | aspell -a
}

function sa {
    eval file=\$$#
    SSHADD=$(which ssh-add)
    if [ -f ~/.ssh/$file ]; then
        args=''
        for i in "$@"; do
            if [ $i != $file ]; then
                args="$args $i"
            fi
        done
        $SSHADD $args ~/.ssh/$file
    else
        $SSHADD $@
    fi
}

llaon() {
    alias ll='ls -lA'
}
llaoff() {
    alias ll='ls -l'
}

# Output total memory currently in use by you {{{1
memtotal() {
    /bin/ps -u $(whoami) -o pid,rss,command | awk '{sum+=$2} END {print "Total " sum / 1024 " MB"}'
}
# }}}

itunespodcast() {
    curl -A 'iTunes/9.0.2 (Windows; Microsoft Windows XP Professional Service Pack 2 (Build 2600)) AppleWebKit/531.22.7' \
    $1 2>/dev/null | grep feedURL | sort -u
}

ml() { (echo "DEVICE PATH TYPE FLAGS" && mount | awk '$2=$4="";1') | column -t; }

#intercept calls to svn
svn () {
    #bail if the user didnt specify which subversion command to invoke
    if [ $# -lt 1 ]; then
        command svn
        return
    fi

    local sub_cmd=$1
    shift

    #intercept svn diff commands
    if [[ $sub_cmd =~ ^(di) ]]; then
        #colorize the diff
        #remove stupid ^M dos line endings
        #page it if there's more one screen
        command svn diff "$@" | colordiff | sed -e 's/\r//g' | less -RF

    #page some stuff I often end up paging manually
    elif [[ $sub_cmd =~ ^(status|log|blame|help)$ ]]; then
        command svn $sub_cmd $@ | less -FRSX

    #let svn handle it as normal
    else
        command svn $sub_cmd "$@"
    fi
}

reloaddb() {
    mysqladmin -f drop $1 && mysqladmin create $1 && zcat $2 | mysql $1
}
